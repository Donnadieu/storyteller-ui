name: CI / "Storyteller UI" app
on:
  # Doc on issue_comment event: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#issue_comment-on-issues-only-or-pull-requests-only
  issue_comment:
    types: [created, edited]

jobs:
  test_coverage_on_request:
    name: Test coverage
    if: ${{ github.event.issue.pull_request }}
    strategy:
      matrix:
        node: ["18"]

    runs-on: ubuntu-20.04

    steps:
      # https://github.com/actions-cool/emoji-helper
      - name: ACK comment
        uses: actions-cool/emoji-helper@v1
        if: ${{ github.event.comment.created }}
        with:
          github_token: ${{ github.token }}
          comment_id: ${{ github.event.comment.id }}
          emoji: eyes

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup workflow variables
        id: workflow-vars
        shell: bash
        run: |
          echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Check Github SHA & Branch
        run: |
          echo "SHA: ${{ steps.workflow-vars.outputs.sha }}"
          echo "Branch: ${{ steps.workflow-vars.outputs.branch }}"

      - name: Install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        if: ${{ contains(github.event.comment.body, '/coverage') }}
        run: npm test --coverage

  deploy_on_request:
    name: Deploy for review
    if: ${{ github.event.issue.pull_request }}
    strategy:
      matrix:
        node: ["18"]

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup workflow variables
        id: workflow-vars
        shell: bash
        run: |
          echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Check Github SHA & Branch
        run: |
          echo "SHA: ${{ steps.workflow-vars.outputs.sha }}"
          echo "Branch: ${{ steps.workflow-vars.outputs.branch }}"

      - name: Deploy for review
        if: ${{ contains(github.event.comment.body, '/review') }}
        run: |
          git fetch --unshallow
          git checkout deploy/review
          git pull
          git merge --no-ff --no-edit ${{ steps.workflow-vars.outputs.sha }} -m "Merge ${{ steps.workflow-vars.outputs.sha }} into deploy/review"
